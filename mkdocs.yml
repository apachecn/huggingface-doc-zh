site_name: „ÄêÂ∏ÉÂÆ¢„Äëhuggingface ‰∏≠ÊñáÁøªËØë
site_url: https://huggingface.apachecn.org

# Repository
repo_name: apachecn/huggingface-doc-zh
repo_url: https://github.com/apachecn/huggingface-doc-zh

theme:
  name: material
  language: zh
  custom_dir: themes_material
  logo: https://data.apachecn.org/img/logo/logo_green.png
  analytics:
    gtag: G-8DP4GX97XY
  features:
    - content.code.copy
    - content.action.edit
    - content.action.view
    - navigation.footer

markdown_extensions:
  - pymdownx.arithmatex:
      generic: true

extra_javascript:
  # - javascripts/mathjax.js
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js

nav:
  - "huggingface ‰∏≠ÊñáÊñáÊ°£": "index.md"
  - "peft":
    - "Get started":
      - "ü§ó PEFT": "docs/peft/index.md"
      - "Quicktour": "docs/peft/quicktour.md"
      - "Installation": "docs/peft/install.md"
    - "Tutorial":
      - "Configurations and models": "docs/peft/tutorial/peft_model_config.md"
      - "Integrations": "docs/peft/tutorial/peft_integrations.md"
    - "PEFT method guides":
      - "Prompt-based methods": "docs/peft/task_guides/prompt_based_methods.md"
      - "LoRA methods": "docs/peft/task_guides/lora_based_methods.md"
      - "IA3": "docs/peft/task_guides/ia3.md"
    - "Developer guides":
      - "Model merging": "docs/peft/developer_guides/model_merging.md"
      - "Quantization": "docs/peft/developer_guides/quantization.md"
      - "LoRA": "docs/peft/developer_guides/lora.md"
      - "Custom models": "docs/peft/developer_guides/custom_models.md"
      - "Adapter injection": "docs/peft/developer_guides/low_level_api.md"
      - "Mixed adapter types": "docs/peft/developer_guides/mixed_models.md"
      - "Contribute to PEFT": "docs/peft/developer_guides/contributing.md"
      - "Troubleshooting": "docs/peft/developer_guides/troubleshooting.md"
    - "ü§ó Accelerate integrations":
      - "DeepSpeed": "docs/peft/accelerate/deepspeed.md"
      - "Fully Sharded Data Parallel": "docs/peft/accelerate/fsdp.md"
    - "Conceptual guides":
      - "Adapters": "docs/peft/conceptual_guides/adapter.md"
      - "Soft prompts": "docs/peft/conceptual_guides/prompting.md"
      - "IA3": "docs/peft/conceptual_guides/ia3.md"
    - "API reference": "https://huggingface.co/docs/peft/package_reference/auto_class"
  - "diffusers":
    - "Get started":
      - "üß® Diffusers": "docs/diffusers/index.md"
      - "Quicktour": "docs/diffusers/quicktour.md"
      - "Effective and efficient diffusion": "docs/diffusers/stable_diffusion.md"
      - "Installation": "docs/diffusers/installation.md"
    - "Tutorials":
      - "Overview": "docs/diffusers/tutorials/tutorial_overview.md"
      - "Understanding pipelines, models and schedulers": "docs/diffusers/using-diffusers/write_own_pipeline.md"
      - "AutoPipeline": "docs/diffusers/tutorials/autopipeline.md"
      - "Train a diffusion model": "docs/diffusers/tutorials/basic_training.md"
      - "Load LoRAs for inference": "docs/diffusers/tutorials/using_peft_for_inference.md"
      - "Accelerate inference of text-to-image diffusion models": "docs/diffusers/tutorials/fast_diffusion.md"
    - "Using Diffusers":
      - "Loading & Hub":
        - "Overview": "docs/diffusers/using-diffusers/loading_overview.md"
        - "Load pipelines, models, and schedulers": "docs/diffusers/using-diffusers/loading.md"
        - "Load and compare different schedulers": "docs/diffusers/using-diffusers/schedulers.md"
        - "Load community pipelines and components": "docs/diffusers/using-diffusers/custom_pipeline_overview.md"
        - "Load safetensors": "docs/diffusers/using-diffusers/using_safetensors.md"
        - "Load different Stable Diffusion formats": "docs/diffusers/using-diffusers/other-formats.md"
        - "Load adapters": "docs/diffusers/using-diffusers/loading_adapters.md"
        - "Push files to the Hub": "docs/diffusers/using-diffusers/push_to_hub.md"
      - "Tasks":
        - "Overview": "docs/diffusers/using-diffusers/pipeline_overview.md"
        - "Unconditional image generation": "docs/diffusers/using-diffusers/unconditional_image_generation.md"
        - "Text-to-image": "docs/diffusers/using-diffusers/conditional_image_generation.md"
        - "Image-to-image": "docs/diffusers/using-diffusers/img2img.md"
        - "Inpainting": "docs/diffusers/using-diffusers/inpaint.md"
        - "Text or image-to-video": "docs/diffusers/using-diffusers/text-img2vid.md"
        - "Depth-to-image": "docs/diffusers/using-diffusers/depth2img.md"
      - "Techniques":
        - "Textual inversion": "docs/diffusers/using-diffusers/textual_inversion_inference.md"
        - "IP-Adapter": "docs/diffusers/using-diffusers/ip_adapter.md"
        - "Merge LoRAs": "docs/diffusers/using-diffusers/merge_loras.md"
        - "Distributed inference with multiple GPUs": "docs/diffusers/training/distributed_inference.md"
        - "Improve image quality with deterministic generation": "docs/diffusers/using-diffusers/reusing_seeds.md"
        - "Control image brightness": "docs/diffusers/using-diffusers/control_brightness.md"
        - "Prompt weighting": "docs/diffusers/using-diffusers/weighted_prompts.md"
        - "Improve generation quality with FreeU": "docs/diffusers/using-diffusers/freeu.md"
      - "Specific pipeline examples":
        - "Overview": "docs/diffusers/using-diffusers/pipeline_overview.md"
        - "Stable Diffusion XL": "docs/diffusers/using-diffusers/sdxl.md"
        - "SDXL Turbo": "docs/diffusers/using-diffusers/sdxl_turbo.md"
        - "Kandinsky": "docs/diffusers/using-diffusers/kandinsky.md"
        - "ControlNet": "docs/diffusers/using-diffusers/controlnet.md"
        - "Shap-E": "docs/diffusers/using-diffusers/shap-e.md"
        - "DiffEdit": "docs/diffusers/using-diffusers/diffedit.md"
        - "Distilled Stable Diffusion inference": "docs/diffusers/using-diffusers/distilled_sd.md"
        - "Pipeline callbacks": "docs/diffusers/using-diffusers/callback.md"
        - "Create reproducible pipelines": "docs/diffusers/using-diffusers/reproducibility.md"
        - "Community pipelines": "docs/diffusers/using-diffusers/custom_pipeline_examples.md"
        - "Contribute a community pipeline": "docs/diffusers/using-diffusers/contribute_pipeline.md"
        - "Latent Consistency Model-LoRA": "docs/diffusers/using-diffusers/inference_with_lcm_lora.md"
        - "Latent Consistency Model": "docs/diffusers/using-diffusers/inference_with_lcm.md"
        - "Trajectory Consistency Distillation-LoRA": "docs/diffusers/using-diffusers/inference_with_tcd_lora.md"
        - "Stable Video Diffusion": "docs/diffusers/using-diffusers/svd.md"
      - "Training":
        - "Overview": "docs/diffusers/training/overview.md"
        - "Create a dataset for training": "docs/diffusers/training/create_dataset.md"
        - "Adapt a model to a new task": "docs/diffusers/training/adapt_a_model.md"
        - "Models":
          - "Unconditional image generation": "docs/diffusers/training/unconditional_training.md"
          - "Text-to-image": "docs/diffusers/training/text2image.md"
          - "Stable Diffusion XL": "docs/diffusers/training/sdxl.md"
          - "Kandinsky 2.2": "docs/diffusers/training/kandinsky.md"
          - "Wuerstchen": "docs/diffusers/training/wuerstchen.md"
          - "ControlNet": "docs/diffusers/training/controlnet.md"
          - "T2I-Adapters": "docs/diffusers/training/t2i_adapters.md"
          - "InstructPix2Pix": "docs/diffusers/training/instructpix2pix.md"
        - "Methods":
          - "Textual Inversion": "docs/diffusers/training/text_inversion.md"
          - "DreamBooth": "docs/diffusers/training/dreambooth.md"
          - "LoRA": "docs/diffusers/training/lora.md"
          - "Custom Diffusion": "docs/diffusers/training/custom_diffusion.md"
          - "Latent Consistency Distillation": "docs/diffusers/training/lcm_distill.md"
          - "Reinforcement learning training with DDPO": "docs/diffusers/training/ddpo.md"
      - "Taking Diffusers Beyond Images":
        - "Other Modalities": "docs/diffusers/using-diffusers/other-modalities.md"
    - "Optimization":
      - "Overview": "docs/diffusers/optimization/opt_overview.md"
      - "General optimizations":
        - "Speed up inference": "docs/diffusers/optimization/fp16.md"
        - "Reduce memory usage": "docs/diffusers/optimization/memory.md"
        - "PyTorch 2.0": "docs/diffusers/optimization/torch2.0.md"
        - "xFormers": "docs/diffusers/optimization/xformers.md"
        - "Token merging": "docs/diffusers/optimization/tome.md"
        - "DeepCache": "docs/diffusers/optimization/deepcache.md"
      - "Optimized model types":
        - "JAX/Flax": "docs/diffusers/using-diffusers/stable_diffusion_jax_how_to.md"
        - "ONNX": "docs/diffusers/optimization/onnx.md"
        - "OpenVINO": "docs/diffusers/optimization/open_vino.md"
        - "Core ML": "docs/diffusers/optimization/coreml.md"
      - "Optimized hardware":
      - "Metal Performance Shaders (MPS)": "docs/diffusers/optimization/mps.md"
      - "Habana Gaudi": "docs/diffusers/optimization/habana.md"
    - "Conceptual Guides":
      - "Philosophy": "docs/diffusers/conceptual/philosophy.md"
      - "Controlled generation": "docs/diffusers/using-diffusers/controlling_generation.md"
      - "How to contribute?": "docs/diffusers/conceptual/contribution.md"
      - "Diffusers' Ethical Guidelines": "docs/diffusers/conceptual/ethical_guidelines.md"
      - "Evaluating Diffusion Models": "docs/diffusers/conceptual/evaluation.md"
    - "API": "https://huggingface.co/docs/diffusers/api/configuration"
  - "transformers":
    - "Get started":
      - "ü§ó Transformers": "docs/transformers/index.md"
      - "Quick tour": "docs/transformers/quicktour.md"
      - "Installation": "docs/transformers/installation.md"
    - "Tutorials":
      - "Run inference with pipelines": "docs/transformers/pipeline_tutorial.md"
      - "Write portable code with AutoClass": "docs/transformers/autoclass_tutorial.md"
      - "Preprocess data": "docs/transformers/preprocessing.md"
      - "Fine-tune a pretrained model": "docs/transformers/training.md"
      - "Train with a script": "docs/transformers/run_scripts.md"
      - "Set up distributed training with ü§ó Accelerate": "docs/transformers/accelerate.md"
      - "Load and train adapters with ü§ó PEFT": "docs/transformers/peft.md"
      - "Share your model": "docs/transformers/model_sharing.md"
      - "Agents": "docs/transformers/transformers_agents.md"
      - "Generation with LLMs": "docs/transformers/llm_tutorial.md"
    - "Task GuidesÔºàÈúÄË¶ÅËá™Â∑±Êï¥ÁêÜÁªìÊûÑÔºâ":
      - "Natural language processing": "docs/transformers/"
      - "Audio": "docs/transformers/"
      - "Computer vision": "docs/transformers/"
      - "Multimodal": "docs/transformers/"
      - "Generation": "docs/transformers/"
      - "Multpromptingimodal": "docs/transformers/"
    - "Developer guides":
      - "Use fast tokenizers from ü§ó Tokenizers": "docs/transformers/fast_tokenizers.md"
      - "Run inference with multilingual models": "docs/transformers/multilingual.md"
      - "Use model-specific APIs": "docs/transformers/create_a_model.md"
      - "Share a custom model": "docs/transformers/custom_models.md"
      - "Templates for chat models": "docs/transformers/chat_templating.md"
      - "Trainer": "docs/transformers/trainer.md"
      - "Run training on Amazon SageMaker": "docs/transformers/sagemaker.md"
      - "Export to ONNX": "docs/transformers/serialization.md"
      - "Export to TFLite": "docs/transformers/tflite.md"
      - "Export to TorchScript": "docs/transformers/torchscript.md"
      - "Benchmarks": "docs/transformers/benchmarks.md"
      - "Notebooks with examples": "docs/transformers/notebooks.md"
      - "Community resources": "docs/transformers/community.md"
      - "Custom Tools and Prompts": "docs/transformers/custom_tools.md"
      - "Troubleshoot": "docs/transformers/troubleshooting.md"
      - "Contribute new quantization method": "docs/transformers/hf_quantizer.md"
    - "Performance and scalability":
      - "Overview": "docs/transformers/performance.md"
      - "Quantization": "docs/transformers/quantization.md"
      - "Efficient training techniques":
        - "Methods and tools for efficient training on a single GPU": "docs/transformers/perf_train_gpu_one.md"
        - "Multiple GPUs and parallelism": "docs/transformers/perf_train_gpu_many.md"
        - "Fully Sharded Data Parallel": "docs/transformers/fsdp.md"
        - "DeepSpeed": "docs/transformers/deepspeed.md"
        - "Efficient training on CPU": "docs/transformers/perf_train_cpu.md"
        - "Distributed CPU training": "docs/transformers/perf_train_cpu_many.md"
        - "Training on TPU with TensorFlow": "docs/transformers/perf_train_tpu_tf.md"
        - "PyTorch training on Apple silicon": "docs/transformers/perf_train_special.md"
        - "Custom hardware for training": "docs/transformers/perf_hardware.md"
        - "Hyperparameter Search using Trainer API": "docs/transformers/hpo_train.md"
      - "Optimizing inference":
        - "CPU inference": "docs/transformers/perf_infer_cpu.md"
        - "GPU inference": "docs/transformers/perf_infer_gpu_one.md"
      - "Instantiate a big model": "docs/transformers/big_models.md"
      - "Debugging": "docs/transformers/debugging.md"
      - "XLA Integration for TensorFlow Models": "docs/transformers/tf_xla.md"
      - "Optimize inference using `torch.compile()`": "docs/transformers/perf_torch_compile.md"
    - "Contribute":
      - "How to contribute to ü§ó Transformers?": "docs/transformers/contributing.md"
      - "How to add a model to ü§ó Transformers?": "docs/transformers/add_new_model.md"
      - "How to convert a ü§ó Transformers model to TensorFlow?": "docs/transformers/add_tensorflow_model.md"
      - "How to add a pipeline to ü§ó Transformers?": "docs/transformers/add_new_pipeline.md"
      - "Testing": "docs/transformers/testing.md"
      - "Checks on a Pull Request": "docs/transformers/pr_checks.md"
    - "Conceptual guides":
      - "Philosophy": "docs/transformers/philosophy.md"
      - "Glossary": "docs/transformers/glossary.md"
      - "What ü§ó Transformers can do": "docs/transformers/task_summary.md"
      - "How ü§ó Transformers solve tasks": "docs/transformers/tasks_explained.md"
      - "The Transformer model family": "docs/transformers/model_summary.md"
      - "Summary of the tokenizers": "docs/transformers/tokenizer_summary.md"
      - "Attention mechanisms": "docs/transformers/attention.md"
      - "Padding and truncation": "docs/transformers/pad_truncation.md"
      - "BERTology": "docs/transformers/bertology.md"
      - "Perplexity of fixed-length models": "docs/transformers/perplexity.md"
      - "Pipelines for webserver inference": "docs/transformers/pipeline_webserver.md"
      - "Model training anatomy": "docs/transformers/model_memory_anatomy.md"
      - "Getting the most out of LLMs": "docs/transformers/llm_tutorial_optimization.md"
    - "API": "https://huggingface.co/docs/transformers/main_classes/agent"
  - "tokenizers":
    - "Getting started":
      - "ü§ó Tokenizers": "docs/tokenizers/index.md"
      - "Quicktour": "docs/tokenizers/quicktour.md"
      - "Installation": "docs/tokenizers/installation.md"
      - "The tokenization pipeline": "docs/tokenizers/pipeline.md"
      - "Components": "docs/tokenizers/components.md"
      - "Training from memory": "docs/tokenizers/training_from_memory.md"
    - "API": "https://huggingface.co/docs/tokenizers/api/input-sequences"
  - "Ë¥°ÁåÆÊåáÂçó": "contrib.md"
  - "ÂÖ≥‰∫éÊàë‰ª¨": "https://www.apachecn.org/about"
  - "Âä†ÂÖ•Êàë‰ª¨": "https://www.apachecn.org/join"
  - "‰∏≠ÊñáËµÑÊ∫êÂêàÈõÜ": "https://docs.apachecn.org"
